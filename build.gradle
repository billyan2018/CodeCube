plugins {
    id 'java'
    id 'maven-publish'
}

group 'CodeCube'
version '1.0'

sourceCompatibility = 1.8

repositories {

    maven {
        url "https://jcenter.bintray.com"
    }

}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    extraLibs group: 'net.java.dev.jna', name: 'jna-platform', version: '4.2.2'

    implementation 'org.apache.commons:commons-text:1.9'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation "org.sonarsource.sonarqube:sonar-plugin-api:6.4"
    implementation "org.codehaus.sonar:sonar-classloader:1.0"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.projectlombok:lombok:1.16.18"
    implementation "ch.qos.logback:logback-classic:1.1.3"
    implementation "com.google.guava:guava:18.0"
    implementation "commons-lang:commons-lang:2.6"
    implementation "commons-io:commons-io:2.4"
    implementation "org.picocontainer:picocontainer:2.15"

    implementation "com.google.code.findbugs:jsr305"

    testImplementation "commons-codec:commons-codec:1.10"
    testImplementation "com.github.stefanbirkner:system-rules:1.16.0"
    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:3.5.2"
    testImplementation "org.mockito:mockito-core:2.8.9"
}
jar {
    manifest {
        attributes(
                'Main-Class': 'codecube.PrAnalyzer'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = 'exclude'
}

publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://github.com/billyan2018/CodeCube"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

/*jacocoTestReport {
    //cleaning up the JiBx classes to jacoco will not cause problems for CareDiscovery
    doFirst {
        delete fileTree(dir: "${buildDir}/classes", include: "com/sonar/sslr/impl/typed/DelayedRuleInvocationExpressi\n" +
                "on")
    }
}*/